<%- include('partials/header', { title: 'Shopping Cart', cssFile: 'cart.css' }) %>

<% if (!user) { %>
    <div class="container mx-auto mt-4">
        <div class="bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4" role="alert">
            <p class="font-bold">Not Logged In</p>
            <p>You need to <a href="/login" class="underline text-blue-500">log in</a> to access your shopping cart.</p>
        </div>
    </div>
<% } else { %>
    <div class="container mx-auto mt-4">
        <!-- Cart Section -->
        <div class="mt-5">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-8 mt-4">
                <div class="md:col-span-2" id="cart-items">
                    <!-- Cart items will be dynamically inserted here -->
                </div>
                <div class="bg-white shadow-lg rounded-lg p-6">
                    <h4 class="text-lg font-bold mb-4">Estimate Shipping & Tax</h4>
                    <form>
                        <div class="mb-4">
                            <label for="country" class="block text-sm font-medium text-gray-700">Country</label>
                            <select id="country" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2">
                                <option>United States</option>
                            </select>
                        </div>
                        <div class="mb-4">
                            <label for="zip" class="block text-sm font-medium text-gray-700">Zip Code</label>
                            <input type="text" id="zip" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2" placeholder="Enter Zip Code">
                        </div>
                    </form>
                    <hr class="my-4">
                    <div class="flex justify-between mb-2">
                        <p class="text-sm">Subtotal:</p>
                        <p id="subtotal" class="text-sm">$0.00</p>
                    </div>
                    <button id="checkout-btn" class="w-full bg-blue-500 text-white px-4 py-2 rounded-md cursor-not-allowed opacity-50" disabled onclick="proceedToCheckout()">Proceed to Checkout</button>
                </div>
            </div>
        </div>
    </div>
<% } %>

<%- include('partials/footer') %>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        if ("<%= user ? user.id : '' %>") {
            fetchCartItems();
        }
    });

    async function fetchCartItems() {
        try {
            const response = await fetch('/api/cart');
            const cartItems = await response.json();

            const cartItemsContainer = document.getElementById('cart-items');
            const checkoutButton = document.getElementById('checkout-btn');
            cartItemsContainer.innerHTML = ''; // Clear any previous cart items

            if (cartItems.length === 0) {
                cartItemsContainer.innerHTML = `
                    <div class="bg-white shadow-lg rounded-lg p-6 text-center">
                        <h5 class="text-lg font-bold mb-3">Your cart is empty!</h5>
                        <p class="text-gray-500">Start shopping now to fill it with products you love.</p>
                        <a href="/products" class="inline-block mt-4 bg-blue-500 text-white px-4 py-2 rounded-md">Shop Now</a>
                    </div>
                `;
                // Disable the checkout button
                checkoutButton.disabled = true;
                checkoutButton.classList.add('cursor-not-allowed', 'opacity-50');
                return;
            }

            let subtotal = 0;

            cartItems.forEach(item => {
                const itemTotal = item.price * item.quantity;
                subtotal += itemTotal;

                const cartItemRow = `
                    <div class="cart-item bg-white rounded-lg p-6 mb-6 shadow-sm">
                        <div class="flex items-center space-x-6">
                            <div class="w-24">
                                <img src="https://via.placeholder.com/150" class="w-full h-auto rounded-lg" alt="${item.name}">
                            </div>
                            <div class="flex-1">
                                <h5 class="text-lg font-bold text-gray-800">${item.name}</h5>
                                <div class="flex justify-between items-center mt-4">
                                    <div class="flex items-center space-x-2 bg-gray-100 p-2 rounded-md">
                                        <button class="px-3 py-1 bg-white rounded-md" onclick="updateQuantity('${item.cart_id}', ${item.quantity - 1})">-</button>
                                        <span class="mx-4 text-gray-700 font-semibold">${item.quantity}</span>
                                        <button class="px-3 py-1 bg-white rounded-md" onclick="updateQuantity('${item.cart_id}', ${item.quantity + 1})">+</button>
                                    </div>
                                    <p class="text-sm text-gray-600 font-semibold">$${(parseFloat(item.price) || 0).toFixed(2)}</p>
                                    <p class="text-sm text-gray-600 font-semibold">$${itemTotal.toFixed(2)}</p>
                                    <button class="text-red-500 text-sm font-semibold" onclick="removeItem('${item.cart_id}')">Remove</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;

                cartItemsContainer.insertAdjacentHTML('beforeend', cartItemRow);
            });

            // Update subtotal
            document.getElementById('subtotal').innerText = `$${subtotal.toFixed(2)}`;

            // Enable the checkout button
            checkoutButton.disabled = false;
            checkoutButton.classList.remove('cursor-not-allowed', 'opacity-50');
        } catch (error) {
            console.error('Error fetching cart items:', error);
        }
    }

    async function updateQuantity(cartId, newQuantity) {
        try {
            const response = await fetch('/cart/update', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ cart_id: cartId, quantity: newQuantity })
            });

            if (response.ok) {
                fetchCartItems();  // Refresh the cart after updating
            } else {
                console.error('Failed to update cart');
            }
        } catch (error) {
            console.error('Error updating quantity:', error);
        }
    }

    async function removeItem(cartId) {
        await updateQuantity(cartId, 0);  // Removing an item is just setting its quantity to 0
    }

    function proceedToCheckout() {
        window.location.href = '/checkout'; // Redirect to the checkout page
    }
</script>
